{"version":3,"sources":["webpack:///./src/hooks/use-posts.js","webpack:///./src/components/post-preview.js","webpack:///./src/components/hero.js","webpack:///./src/hooks/useInstagram.js","webpack:///./src/components/insta.js","webpack:///./src/pages/index.js","webpack:///./src/components/header.js","webpack:///./src/hooks/use-site-metadata.js","webpack:///./src/components/layout.js","webpack:///./src/components/read-link.js"],"names":["usePosts","_1484053609","data","allMdx","nodes","map","post","title","frontmatter","author","slug","image","excerpt","PostPreview","_ref4","Object","core_browser_esm","css","_ref","gatsby_browser_entry","to","_ref2","gatsby_image_default","a","fluid","sharp","_ref3","alt","read_link","ImageBackground","styled_base_browser_esm","BackgroundImage","target","name","styles","TextBox","Hero","_3369475220","Tag","useInstagram","_1857109490","allInstaNode","node","_objectSpread","localFile","childImageSharp","id","caption","username","Insta","instaPhotos","react_default","Fragment","insta_ref","photo","key","href","insta_ref2","insta_ref3","__webpack_exports__","posts","hero","layout","post_preview","insta","NavLink","Link","props","fontWeight","Header","activeClassName","useSiteMetadata","_2112515923","site","siteMetadata","Layout","children","_useSiteMetadata","description","layout_ref","Helmet_default","lang","content","header","layout_ref2","ReadLink","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-pages-index-js-184f54ebc3c4733c7ff6.js","sourcesContent":["import { graphql, useStaticQuery } from 'gatsby';\n\nconst usePosts = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMdx {\n        nodes {\n          frontmatter {\n            title\n            slug\n            author\n            image {\n              sharp: childImageSharp {\n                fluid(\n                  maxWidth: 100\n                  maxHeight: 100\n                  duotone: { shadow: \"#663399\", highlight: \"ddbbff\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  `)\n\n  return data.allMdx.nodes.map(post => ({\n      title: post.frontmatter.title,\n      author: post.frontmatter.author,\n      slug: post.frontmatter.slug,\n      image: post.frontmatter.image,\n      excerpt: post.excerpt\n  }));\n};\n\nexport default usePosts","import React from 'react'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\nimport ReadLink from './read-link'\nimport Image from 'gatsby-image';\n\nconst PostPreview = ({ post }) => (\n    <article\n      css={css`\n        border-bottom: 1px solid #ddd;\n        display: flex;\n        margin-top: 0;\n        padding-bottom: 1rem;\n\n        :first-of-type {\n            margin-top: 1rem;\n        }\n      `}\n    >\n      <Link\n        to={post.slug}\n        css={css`\n          margin: 1rem 1rem 0 0;\n          width: 100px;\n        `}\n      >\n        <Image\n          fluid={post.image.sharp.fluid}\n          css={css`\n            * {\n              margin-top: 0;\n            }\n          `}\n          alt={post.title}\n        />\n      </Link>\n      <div>\n        <h3><Link to={post.slug}>{post.title}</Link></h3>\n        <p>{post.excerpt}</p>\n        <ReadLink to={post.slug}>read this &rarr;</ReadLink>\n      </div>\n    </article>\n)\n\nexport default PostPreview;","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Link, graphql, useStaticQuery } from 'gatsby';\nimport BackgroundImage from 'gatsby-background-image';\n\nconst ImageBackground = styled(BackgroundImage)`\n  background-position: 20% center;\n  background-size: cover;\n  height: 30vh;\n\n  + * {\n      margin-top: 0;\n  }\n`;\n\nconst TextBox = styled('div')`\n  background-image: linear-gradient(to top, #ddbbffdd 2rem, #ddbbff00);\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: flex-end;\n  padding: 0 calc((100vw - 550px) / 2) 2rem;\n  width: 100%;\n\n  h1 {\n      text-shadow: 1px 1px 3px #eeddff66;\n      font-size: 2.25rem;\n  }\n\n  p,\n  a {\n      color: #222;\n      margin-top: 0;\n  }\n\n  a {\n      margin-top: 0.5rem;\n  }\n`;\n\nconst Hero = () => {\n    const { image } = useStaticQuery(graphql`\n      query {\n        image: file(relativePath: { eq: \"nicole-geri.jpg\" }) {\n          sharp: childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }  \n        }\n      }\n    `)\n\n    return (\n        <ImageBackground Tag=\"section\" fluid={image.sharp.fluid}>\n          <TextBox>\n            <h1>Frontend Masters + Gatsby &hearts;</h1>\n            <p>\n                Hello Minnesota <Link to=\"/about/\">Learn about me &rarr;</Link>\n            </p>\n          </TextBox>\n        </ImageBackground>\n    )\n};\n\nexport default Hero;","import { graphql, useStaticQuery } from 'gatsby'\n\nconst useInstagram = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allInstaNode(limit: 12) {\n        nodes {\n          id\n          caption\n          username\n          localFile {\n            childImageSharp {\n              fluid(maxWidth: 120 maxHeight: 120) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return data.allInstaNode.nodes.map(node => ({\n      ...node.localFile.childImageSharp,\n      id: node.id,\n      caption: node.caption,\n      username: node.username\n  }))\n}\n\nexport default useInstagram;","import React from 'react'\nimport Image from 'gatsby-image'\nimport { css } from '@emotion/core'\nimport useInstagram from '../hooks/useInstagram'\n\nconst Insta = () => {\n    const instaPhotos = useInstagram();\n    const { username } = instaPhotos[0];\n\n    return (\n        <>\n          <h2>Instagram posts from @gatsbyjs</h2>\n          <div\n            css={css`\n              display: flex;\n              flex-wrap: wrap;\n              justify-content: space-between;\n              margin: 1rem -0.5re;\n            `}\n          >\n              {instaPhotos.map(photo => (\n                  <a\n                    key={photo.id}\n                    href={`https://instagram.com/p/${photo.id}/`}\n                    css={css`\n                      box-shadow: 0;\n                      display: block;\n                      margin: 0.5rem;\n                      max-width: calc(33% - 1rem);\n                      width: 120px;\n                      transition: 200ms box-shadow linear;\n\n                      :focus,\n                      :hover {\n                          box-shadow: 0 2px 14px #22222244;\n                          z-index: 10;\n                      }\n                    `}\n                  >\n                    <Image\n                      fluid={photo.fluid}\n                      alt={photo.caption}\n                      css={css`\n                        width: 100%;\n\n                        * {\n                            margin-top: 0;\n                        }\n                      `}\n                    />\n                  </a>\n              ))}\n          </div>\n          <a href={`https://instagram.com/gatsbyjs/${username}`}>\n              See more on Instagram &rarr;\n          </a>\n        </>\n    )\n}\n\nexport default Insta;","import React from 'react';\nimport Layout from '../components/layout'\nimport usePosts from '../hooks/use-posts'\nimport PostPreview from '../components/post-preview'\nimport Hero from '../components/hero';\nimport Insta from '../components/insta'\n\nexport default () => {\n  const posts = usePosts();\n\n  return (\n    <>\n      <Hero />\n      <Layout>\n        <h2>Read my blog</h2>\n        {posts.map(post => (\n          <PostPreview key={post.slug} post={post} />\n        ))}\n        <Insta />\n      </Layout>\n    </>\n  )\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\n\n\nconst NavLink = styled(Link)`\n  color: #222;\n  font-size: 1rem;\n  font-weight: ${props => props.fontWeight || 'normal'};\n  line-height: 1;\n  margin: 0 0.5rem 0 0;\n  padding: 0.25rem;\n  text-decoration: none;\n\n  &.current-page {\n      border-bottom: 2px solid #222;\n  }\n\n  &:last-of-type {\n      margin-right: 0;\n  }\n`\n\nconst Header = () => (\n    <header\n      css={css`\n        background: #eee;\n        border-bottom: 1px solid #ddd;\n        display: flex;\n        justify-content: space-between;\n        padding: 0.5rem calc((100vw - 550px - 0.5rem) / 2);\n      `}\n    >\n        <NavLink to=\"/\" fontWeight={\"bold\"}>FEM Workshop</NavLink>\n        <nav css={css`margin-top: 0;`}>\n            <NavLink to=\"/\" activeClassName={\"current-page\"}>Home</NavLink>\n            <NavLink to=\"/about/\" activeClassName={\"current-page\"}>About</NavLink>\n        </nav>\n\n    </header>\n)\n\nexport default Header;","import { graphql, useStaticQuery } from 'gatsby'\n\nconst useSiteMetadata = () => {\n    const data = useStaticQuery(graphql`\n      query {\n          site {\n              siteMetadata {\n                  title\n                  description\n              }\n          }\n      }\n    `)\n\n    return data.site.siteMetadata;\n}\n\nexport default useSiteMetadata;","import React from 'react'\nimport { Global, css } from '@emotion/core'\nimport Helmet from 'react-helmet'\nimport Header from './header';\nimport useSiteMetadata from '../hooks/use-site-metadata'\n\nconst Layout = ({ children }) => {\n  const { title, description } = useSiteMetadata();\n\n  return (\n    <>\n      <Global \n      styles={css`\n        * {\n          box-sizing: border-box;\n          margin: 0;\n        }\n\n        * + * {\n            margin-top: 1rem;\n        }\n\n        html,\n        body {\n            margin: 0;\n            color: #555;\n            font-family: -apply-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;\n            font-size: 18px;\n            line-height: 1.4;\n\n            /* remove margin for the main div that Gatsby mounts\n            into */\n            > div {\n                margin-top: 0;\n            }\n\n            h1,\n            h2,\n            h3,\n            h4,\n            h5,\n            h6 {\n                color: #222;\n                line-height: 1.1;\n\n                + * {\n                    margin-top: 0.5rem;\n                }\n            }\n\n            strong {\n                color: #222;\n            }\n\n            li {\n                margin-top: 0.25rem;\n            }\n        }\n      `}\n      />\n      <Helmet>\n        <html lang=\"en\" />\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />\n      </Helmet>\n      <Header />\n      <main\n        css={css`\n          margin: 2rem auto 4rem;\n          max-width: 90vw;\n          width: 550px;\n        `}\n      >{children}</main>\n    </>\n)\n}\n\nexport default Layout;","import styled from '@emotion/styled'\nimport { Link } from 'gatsby'\n\nconst ReadLink = styled(Link)`\n  display: inline-block;\n  font-size: 0.875rem;\n`\n\nexport default ReadLink"],"sourceRoot":""}